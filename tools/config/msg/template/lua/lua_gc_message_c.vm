## GCMessage的client端模板VTL;

## smallType
#macro( smallType $type)
	#if($type == "Byte")
		int
	#elseif( $type == "Boolean" )
		int
	#elseif( $type == "Short" )
		int
	#elseif( $type == "Integer" )
		int
	#elseif( $type == "Long" )
		Number
	#elseif( $type == "Float" )
		Number
	#elseif( $type == "Double" )
		Number
	#else
		$type
	#end
#end

##bigType
#macro( bigType $type)
	#if( $type == "Integer" )
		Int
	#elseif( $type == "Boolean" )
		Byte
	#elseif( $type == "String" )
		UTF
	#else
		$type
	#end
#end

## upperFirstChar
#macro( upperFirstChar $type)
	$type.substring(0,1).toUpperCase()$type.substring(1)
#end

## readMsg
#macro( readMsg $field $lastFieldObjectName)
	#if(${field.list})
		var ${field.smallName}_${lastFieldObjectName}:int;
		var ${lastFieldObjectName}_${field.smallName}:Array = [];
		var ${lastFieldObjectName}_${field.smallName}Size:int = data.readShort();
		${lastFieldObjectName}.${field.smallName} = ${lastFieldObjectName}_${field.smallName};
		for(${field.smallName}_${lastFieldObjectName}=0; ${field.smallName}_${lastFieldObjectName}<${lastFieldObjectName}_${field.smallName}Size; ${field.smallName}_${lastFieldObjectName}++){
			#if(${field.isNewType})
				${lastFieldObjectName}_${field.smallName}[${field.smallName}_${lastFieldObjectName}] = new ${field.type}();
				var ${lastFieldObjectName}_${field.smallName}_obj:${field.type} = ${lastFieldObjectName}_${field.smallName}[${field.smallName}_${lastFieldObjectName}];
				#set($fieldObjectName="${lastFieldObjectName}_${field.smallName}_obj")
				#foreach( $subfield in $field.subFields )
					#if($subfield.type=="Long")
						${fieldObjectName}.${subfield.smallName} = Long.read(data);
					#else
						#readMsg($subfield ${fieldObjectName})
					#end
				#end
			#else
				${lastFieldObjectName}.${field.smallName}[${field.smallName}_${lastFieldObjectName}] = data.read#bigType(${field.type})();
			#end
		}
	#elseif(${field.isNewType})
		var ${field.smallName}:${field.type} = new ${field.type}();
		${lastFieldObjectName}.${field.smallName} = ${field.smallName};
		#set($fieldObject="${field.smallName}")
		#foreach( $subfield in $field.subFields )
			#if($subfield.type=="Long")
				${fieldObject}.${subfield.smallName} = Long.read(data);
			#else
				#readMsg($subfield ${fieldObject})
			#end
		#end
	#else
		${lastFieldObjectName}.${field.smallName} = data.read#bigType(${field.type})();
	#end
#end

## content
package com.hifun.soul.game.net.messages {
	import flash.utils.IDataInput;
	import com.hifun.soul.game.net.handlers.*;
	import com.hifun.soul.game.net.datas.*;
	import com.hifun.soul.framework.utils.Long;
	import com.hifun.soul.framework.net.AbstractMessageReceiver;
	import com.hifun.soul.game.net.MessageType;
	
#if($constants.size()>0)
	/**
	 * 常量定义
#foreach( $constant in $constants )
	 *	【$constant.name】$constant.desc
#end	
	 */
#end
	public class ${module}GCMessage extends AbstractMessageReceiver
	{
		override protected function collectObservers():void
		{
#foreach( $msg in $msgs )
				register(MessageType.${msg.type},${msg.type});
#end
		}
#foreach( $msg in $msgs )
 
  		/**
		 * $msg.comment
#foreach( $field in $msg.fields )
		 * @param $field.smallName $field.comment
#end
		 */
		public function ${msg.type}(data:IDataInput):void 
		{
#if($msg.hasListField)
			var i:int,size:int;
#end
#foreach( $field in $msg.fields )
#if ($field.list) 
			var ${field.smallName}:Array = [];
			size = data.readShort();
			for(i=0; i<size; i++)
			{
				#if($field.type=="Long")
				${field.smallName}[i] = Long.read(data);
				#elseif($field.isNewType)
				${field.smallName}[i] = new ${field.type}();
				var ${field.smallName}_obj:${field.type} = ${field.smallName}[i];
				#set($fieldObjectNameA="${field.smallName}_obj")
				#foreach( $subfield in $field.subFields )
				#set($index=$velocityCount - 1)
				#if($subfield.type=="Long")
									${field.smallName}[i].${subfield.smallName} = Long.read(data);//$subfield.comment
				#else
									#readMsg($subfield ${fieldObjectNameA})
				#end
				#end
				#else
				${field.smallName}[i] = data.read#bigType($field.type)();
				#end
			}
#elseif($field.isNewType)
			var ${field.smallName}:${field.type} = new ${field.type}();
			#set($fieldObjectA="${field.smallName}")
#foreach( $subfield in $field.subFields )
#if($subfield.type=="Long")
			${field.smallName}.${subfield.smallName} = Long.read(data);
#else
			#readMsg($subfield ${fieldObjectA})	
#end
#end			
#elseif($field.type=="Long")
			var ${field.smallName}:Long = Long.read(data);
#else
			var ${field.smallName}:#smallType($field.type) = data.read#bigType($field.type)();		
#end
#end
#if($msg.fields.size()>0||$msg.subMsgs.size()==0)
			#upperFirstChar($module)Handler.${msg.type}(#foreach( $field in $msg.fields )${field.smallName}#if($velocityCount != $msg.fields.size()),#end#end);
#end
#foreach( $subMsg in $msg.subMsgs )
			var i:int,size:int;
			size = data.readShort();
			for(i=0; i<size; i++)
			{
				${subMsg.type}(data);
			}
#end
		}
#end
	}
}