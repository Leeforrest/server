#macro( smallType $type)
#if($type == "Byte")int#elseif( $type == "Boolean" )int#elseif( $type == "Short" )int#elseif( $type == "Integer" )int#elseif( $type == "Long" )Long#elseif( $type == "Float" )Number#elseif( $type == "Double" )Number#else$type#end
#end
## bigType
#macro( bigType $type)#if( $type == "Integer" )Int#elseif( $type == "Boolean" )Byte#elseif( $type == "String" )StringUShort#else$type#end
#end
## upperFirstChar
#macro( upperFirstChar $type)$type.substring(0,1).toUpperCase()$type.substring(1)
#end
-- $model.type (proto data object, do not modified!)
-- @author crazyjohn

-- create class
local $model.type = class("$model.type")

-- deserializable;
function ${model.type}:readSelf(data)
#foreach($field in $model.subFields)
	-- $field.comment
#if($field.list)
	self.${field.smallName} = {}
#else
	self.${field.smallName} = data:read#bigType(${field.type})()
#end
#end
end

-- serializable;
function ${model.type}:writeSelf(data)
#foreach($field in $model.subFields)
	-- $field.comment
#if($field.list)
	$model.type.${field.smallName} = {}
#else
	data:write#bigType(${field.type})(self.${field.smallName})
#end
#end
end

return $model.type