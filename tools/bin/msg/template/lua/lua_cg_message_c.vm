## CGMessage的client端模板VTL;

## smallType
#macro( smallType $type)
	#if($type == "Byte")int
	#elseif( $type == "Boolean" )int
	#elseif( $type == "Short" )int
	#elseif( $type == "Integer" )int
	#elseif( $type == "Long" )Long
	#elseif( $type == "Float" )Number
	#elseif( $type == "Double" )Number
	#else$type
	#end
#end

## bigType
#macro( bigType $type)
	#if( $type == "Integer" )Int
	#elseif( $type == "Boolean" )Byte
	#elseif( $type == "String" )StringUShort
	#else$type
	#end
#end

## upperFirstChar
#macro( upperFirstChar $type)$type.substring(0,1).toUpperCase()$type.substring(1)
#end

	
#if($constants.size()>0)
	--[[
	 - 常量定义：
#foreach( $constant in $constants )
	 -	【$constant.name】$constant.desc
#end	
	 ]]
#end
local CG${module}Message = class("CG${module}Message")

 #foreach( $msg in $msgs )
 
 		--[[
		 - $msg.comment
#foreach( $field in $msg.fields )
		 - @param $field.smallName $field.comment
#end
		 ]]
		function CG${module}Message:${msg.type}(#foreach( $field in $msg.fields )${field.smallName}:#end)
				local msgBody = requireNewByteArray()
#if($msg.hasListField)
				local i
#end
#foreach( $field in $msg.fields )
#if ($field.list) 
				msgBody.writeShort(${field.smallName}.length)
				for i=1, i<${field.smallName}.length do
#if( $field.isNewType )
#foreach( $subfield in $field.subFields )
#if($subfield.type=="Long")
					${field.smallName}[i].${subfield.name}.write(msgBody)			
#else
					msgBody.write#bigType($subfield.type)(${field.smallName}[i].${subfield.smallName}) --$subfield.comment
#end
#end
#else
#if($field.type=="Long")
					${field.smallName}[i].write(msgBody)			
#else
					msgBody.write#bigType($field.type)(${field.smallName}[i])
#end
#end
				end
#else
#if($field.type=="Long")
				${field.smallName}.write(msgBody)		
#else
				msgBody.write#bigType($field.type)($field.smallName)
#end
#end
#end	
				GameSocket:sendPacket(MessageType.${msg.type},msgBody)
#end
	end
return CG${module}Message