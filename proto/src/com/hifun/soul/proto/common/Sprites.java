// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sprite.proto

package com.hifun.soul.proto.common;

public final class Sprites {
  private Sprites() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SpriteDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 spriteId = 1;
    boolean hasSpriteId();
    int getSpriteId();
    
    // required string spriteUUID = 2;
    boolean hasSpriteUUID();
    String getSpriteUUID();
    
    // required int32 level = 3;
    boolean hasLevel();
    int getLevel();
    
    // required bool equiped = 4;
    boolean hasEquiped();
    boolean getEquiped();
  }
  public static final class SpriteData extends
      com.google.protobuf.GeneratedMessage
      implements SpriteDataOrBuilder {
    // Use SpriteData.newBuilder() to construct.
    private SpriteData(Builder builder) {
      super(builder);
    }
    private SpriteData(boolean noInit) {}
    
    private static final SpriteData defaultInstance;
    public static SpriteData getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpriteData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteData_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 spriteId = 1;
    public static final int SPRITEID_FIELD_NUMBER = 1;
    private int spriteId_;
    public boolean hasSpriteId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSpriteId() {
      return spriteId_;
    }
    
    // required string spriteUUID = 2;
    public static final int SPRITEUUID_FIELD_NUMBER = 2;
    private java.lang.Object spriteUUID_;
    public boolean hasSpriteUUID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSpriteUUID() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          spriteUUID_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSpriteUUIDBytes() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        spriteUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private int level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLevel() {
      return level_;
    }
    
    // required bool equiped = 4;
    public static final int EQUIPED_FIELD_NUMBER = 4;
    private boolean equiped_;
    public boolean hasEquiped() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getEquiped() {
      return equiped_;
    }
    
    private void initFields() {
      spriteId_ = 0;
      spriteUUID_ = "";
      level_ = 0;
      equiped_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSpriteId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSpriteUUID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLevel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEquiped()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, spriteId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSpriteUUIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, equiped_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, spriteId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSpriteUUIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, level_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, equiped_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hifun.soul.proto.common.Sprites.SpriteData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hifun.soul.proto.common.Sprites.SpriteDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteData_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteData_fieldAccessorTable;
      }
      
      // Construct using com.hifun.soul.proto.common.Sprites.SpriteData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        spriteId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        spriteUUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        equiped_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteData.getDescriptor();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteData getDefaultInstanceForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteData.getDefaultInstance();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteData build() {
        com.hifun.soul.proto.common.Sprites.SpriteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hifun.soul.proto.common.Sprites.SpriteData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hifun.soul.proto.common.Sprites.SpriteData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteData buildPartial() {
        com.hifun.soul.proto.common.Sprites.SpriteData result = new com.hifun.soul.proto.common.Sprites.SpriteData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.spriteId_ = spriteId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.spriteUUID_ = spriteUUID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.equiped_ = equiped_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hifun.soul.proto.common.Sprites.SpriteData) {
          return mergeFrom((com.hifun.soul.proto.common.Sprites.SpriteData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hifun.soul.proto.common.Sprites.SpriteData other) {
        if (other == com.hifun.soul.proto.common.Sprites.SpriteData.getDefaultInstance()) return this;
        if (other.hasSpriteId()) {
          setSpriteId(other.getSpriteId());
        }
        if (other.hasSpriteUUID()) {
          setSpriteUUID(other.getSpriteUUID());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasEquiped()) {
          setEquiped(other.getEquiped());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSpriteId()) {
          
          return false;
        }
        if (!hasSpriteUUID()) {
          
          return false;
        }
        if (!hasLevel()) {
          
          return false;
        }
        if (!hasEquiped()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              spriteId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              spriteUUID_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              level_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              equiped_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 spriteId = 1;
      private int spriteId_ ;
      public boolean hasSpriteId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSpriteId() {
        return spriteId_;
      }
      public Builder setSpriteId(int value) {
        bitField0_ |= 0x00000001;
        spriteId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpriteId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        spriteId_ = 0;
        onChanged();
        return this;
      }
      
      // required string spriteUUID = 2;
      private java.lang.Object spriteUUID_ = "";
      public boolean hasSpriteUUID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSpriteUUID() {
        java.lang.Object ref = spriteUUID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          spriteUUID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSpriteUUID(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        spriteUUID_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpriteUUID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        spriteUUID_ = getDefaultInstance().getSpriteUUID();
        onChanged();
        return this;
      }
      void setSpriteUUID(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        spriteUUID_ = value;
        onChanged();
      }
      
      // required int32 level = 3;
      private int level_ ;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLevel() {
        return level_;
      }
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = 0;
        onChanged();
        return this;
      }
      
      // required bool equiped = 4;
      private boolean equiped_ ;
      public boolean hasEquiped() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getEquiped() {
        return equiped_;
      }
      public Builder setEquiped(boolean value) {
        bitField0_ |= 0x00000008;
        equiped_ = value;
        onChanged();
        return this;
      }
      public Builder clearEquiped() {
        bitField0_ = (bitField0_ & ~0x00000008);
        equiped_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hifun.soul.proto.common.SpriteData)
    }
    
    static {
      defaultInstance = new SpriteData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hifun.soul.proto.common.SpriteData)
  }
  
  public interface SpriteBuffOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 buffId = 1;
    boolean hasBuffId();
    int getBuffId();
    
    // required bool activated = 2;
    boolean hasActivated();
    boolean getActivated();
  }
  public static final class SpriteBuff extends
      com.google.protobuf.GeneratedMessage
      implements SpriteBuffOrBuilder {
    // Use SpriteBuff.newBuilder() to construct.
    private SpriteBuff(Builder builder) {
      super(builder);
    }
    private SpriteBuff(boolean noInit) {}
    
    private static final SpriteBuff defaultInstance;
    public static SpriteBuff getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpriteBuff getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBuff_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBuff_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 buffId = 1;
    public static final int BUFFID_FIELD_NUMBER = 1;
    private int buffId_;
    public boolean hasBuffId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getBuffId() {
      return buffId_;
    }
    
    // required bool activated = 2;
    public static final int ACTIVATED_FIELD_NUMBER = 2;
    private boolean activated_;
    public boolean hasActivated() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getActivated() {
      return activated_;
    }
    
    private void initFields() {
      buffId_ = 0;
      activated_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasBuffId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActivated()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, activated_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, buffId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, activated_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBuff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hifun.soul.proto.common.Sprites.SpriteBuff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hifun.soul.proto.common.Sprites.SpriteBuffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBuff_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBuff_fieldAccessorTable;
      }
      
      // Construct using com.hifun.soul.proto.common.Sprites.SpriteBuff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        buffId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        activated_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteBuff.getDescriptor();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBuff getDefaultInstanceForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteBuff.getDefaultInstance();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBuff build() {
        com.hifun.soul.proto.common.Sprites.SpriteBuff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hifun.soul.proto.common.Sprites.SpriteBuff buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hifun.soul.proto.common.Sprites.SpriteBuff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBuff buildPartial() {
        com.hifun.soul.proto.common.Sprites.SpriteBuff result = new com.hifun.soul.proto.common.Sprites.SpriteBuff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.buffId_ = buffId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.activated_ = activated_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hifun.soul.proto.common.Sprites.SpriteBuff) {
          return mergeFrom((com.hifun.soul.proto.common.Sprites.SpriteBuff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hifun.soul.proto.common.Sprites.SpriteBuff other) {
        if (other == com.hifun.soul.proto.common.Sprites.SpriteBuff.getDefaultInstance()) return this;
        if (other.hasBuffId()) {
          setBuffId(other.getBuffId());
        }
        if (other.hasActivated()) {
          setActivated(other.getActivated());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasBuffId()) {
          
          return false;
        }
        if (!hasActivated()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              buffId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              activated_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 buffId = 1;
      private int buffId_ ;
      public boolean hasBuffId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getBuffId() {
        return buffId_;
      }
      public Builder setBuffId(int value) {
        bitField0_ |= 0x00000001;
        buffId_ = value;
        onChanged();
        return this;
      }
      public Builder clearBuffId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        buffId_ = 0;
        onChanged();
        return this;
      }
      
      // required bool activated = 2;
      private boolean activated_ ;
      public boolean hasActivated() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getActivated() {
        return activated_;
      }
      public Builder setActivated(boolean value) {
        bitField0_ |= 0x00000002;
        activated_ = value;
        onChanged();
        return this;
      }
      public Builder clearActivated() {
        bitField0_ = (bitField0_ & ~0x00000002);
        activated_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hifun.soul.proto.common.SpriteBuff)
    }
    
    static {
      defaultInstance = new SpriteBuff(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hifun.soul.proto.common.SpriteBuff)
  }
  
  public interface SpriteBagCellOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 index = 1;
    boolean hasIndex();
    int getIndex();
    
    // required bool equiped = 2;
    boolean hasEquiped();
    boolean getEquiped();
    
    // optional string spriteUUID = 3;
    boolean hasSpriteUUID();
    String getSpriteUUID();
  }
  public static final class SpriteBagCell extends
      com.google.protobuf.GeneratedMessage
      implements SpriteBagCellOrBuilder {
    // Use SpriteBagCell.newBuilder() to construct.
    private SpriteBagCell(Builder builder) {
      super(builder);
    }
    private SpriteBagCell(boolean noInit) {}
    
    private static final SpriteBagCell defaultInstance;
    public static SpriteBagCell getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpriteBagCell getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBagCell_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBagCell_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getIndex() {
      return index_;
    }
    
    // required bool equiped = 2;
    public static final int EQUIPED_FIELD_NUMBER = 2;
    private boolean equiped_;
    public boolean hasEquiped() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getEquiped() {
      return equiped_;
    }
    
    // optional string spriteUUID = 3;
    public static final int SPRITEUUID_FIELD_NUMBER = 3;
    private java.lang.Object spriteUUID_;
    public boolean hasSpriteUUID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSpriteUUID() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          spriteUUID_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSpriteUUIDBytes() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        spriteUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      index_ = 0;
      equiped_ = false;
      spriteUUID_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEquiped()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, equiped_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSpriteUUIDBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, equiped_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSpriteUUIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteBagCell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hifun.soul.proto.common.Sprites.SpriteBagCell prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hifun.soul.proto.common.Sprites.SpriteBagCellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBagCell_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteBagCell_fieldAccessorTable;
      }
      
      // Construct using com.hifun.soul.proto.common.Sprites.SpriteBagCell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        equiped_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        spriteUUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteBagCell.getDescriptor();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBagCell getDefaultInstanceForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteBagCell.getDefaultInstance();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBagCell build() {
        com.hifun.soul.proto.common.Sprites.SpriteBagCell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hifun.soul.proto.common.Sprites.SpriteBagCell buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hifun.soul.proto.common.Sprites.SpriteBagCell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteBagCell buildPartial() {
        com.hifun.soul.proto.common.Sprites.SpriteBagCell result = new com.hifun.soul.proto.common.Sprites.SpriteBagCell(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.equiped_ = equiped_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.spriteUUID_ = spriteUUID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hifun.soul.proto.common.Sprites.SpriteBagCell) {
          return mergeFrom((com.hifun.soul.proto.common.Sprites.SpriteBagCell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hifun.soul.proto.common.Sprites.SpriteBagCell other) {
        if (other == com.hifun.soul.proto.common.Sprites.SpriteBagCell.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasEquiped()) {
          setEquiped(other.getEquiped());
        }
        if (other.hasSpriteUUID()) {
          setSpriteUUID(other.getSpriteUUID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasEquiped()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              equiped_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              spriteUUID_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 index = 1;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // required bool equiped = 2;
      private boolean equiped_ ;
      public boolean hasEquiped() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getEquiped() {
        return equiped_;
      }
      public Builder setEquiped(boolean value) {
        bitField0_ |= 0x00000002;
        equiped_ = value;
        onChanged();
        return this;
      }
      public Builder clearEquiped() {
        bitField0_ = (bitField0_ & ~0x00000002);
        equiped_ = false;
        onChanged();
        return this;
      }
      
      // optional string spriteUUID = 3;
      private java.lang.Object spriteUUID_ = "";
      public boolean hasSpriteUUID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSpriteUUID() {
        java.lang.Object ref = spriteUUID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          spriteUUID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSpriteUUID(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        spriteUUID_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpriteUUID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        spriteUUID_ = getDefaultInstance().getSpriteUUID();
        onChanged();
        return this;
      }
      void setSpriteUUID(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        spriteUUID_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.hifun.soul.proto.common.SpriteBagCell)
    }
    
    static {
      defaultInstance = new SpriteBagCell(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hifun.soul.proto.common.SpriteBagCell)
  }
  
  public interface SpriteSlotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 index = 1;
    boolean hasIndex();
    int getIndex();
    
    // required bool equiped = 2;
    boolean hasEquiped();
    boolean getEquiped();
    
    // optional string spriteUUID = 3;
    boolean hasSpriteUUID();
    String getSpriteUUID();
  }
  public static final class SpriteSlot extends
      com.google.protobuf.GeneratedMessage
      implements SpriteSlotOrBuilder {
    // Use SpriteSlot.newBuilder() to construct.
    private SpriteSlot(Builder builder) {
      super(builder);
    }
    private SpriteSlot(boolean noInit) {}
    
    private static final SpriteSlot defaultInstance;
    public static SpriteSlot getDefaultInstance() {
      return defaultInstance;
    }
    
    public SpriteSlot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteSlot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteSlot_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 index = 1;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getIndex() {
      return index_;
    }
    
    // required bool equiped = 2;
    public static final int EQUIPED_FIELD_NUMBER = 2;
    private boolean equiped_;
    public boolean hasEquiped() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getEquiped() {
      return equiped_;
    }
    
    // optional string spriteUUID = 3;
    public static final int SPRITEUUID_FIELD_NUMBER = 3;
    private java.lang.Object spriteUUID_;
    public boolean hasSpriteUUID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSpriteUUID() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          spriteUUID_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSpriteUUIDBytes() {
      java.lang.Object ref = spriteUUID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        spriteUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      index_ = 0;
      equiped_ = false;
      spriteUUID_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEquiped()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, equiped_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSpriteUUIDBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, equiped_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSpriteUUIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.Sprites.SpriteSlot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hifun.soul.proto.common.Sprites.SpriteSlot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hifun.soul.proto.common.Sprites.SpriteSlotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteSlot_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hifun.soul.proto.common.Sprites.internal_static_com_hifun_soul_proto_common_SpriteSlot_fieldAccessorTable;
      }
      
      // Construct using com.hifun.soul.proto.common.Sprites.SpriteSlot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        equiped_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        spriteUUID_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteSlot.getDescriptor();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteSlot getDefaultInstanceForType() {
        return com.hifun.soul.proto.common.Sprites.SpriteSlot.getDefaultInstance();
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteSlot build() {
        com.hifun.soul.proto.common.Sprites.SpriteSlot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hifun.soul.proto.common.Sprites.SpriteSlot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hifun.soul.proto.common.Sprites.SpriteSlot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hifun.soul.proto.common.Sprites.SpriteSlot buildPartial() {
        com.hifun.soul.proto.common.Sprites.SpriteSlot result = new com.hifun.soul.proto.common.Sprites.SpriteSlot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.equiped_ = equiped_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.spriteUUID_ = spriteUUID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hifun.soul.proto.common.Sprites.SpriteSlot) {
          return mergeFrom((com.hifun.soul.proto.common.Sprites.SpriteSlot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hifun.soul.proto.common.Sprites.SpriteSlot other) {
        if (other == com.hifun.soul.proto.common.Sprites.SpriteSlot.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasEquiped()) {
          setEquiped(other.getEquiped());
        }
        if (other.hasSpriteUUID()) {
          setSpriteUUID(other.getSpriteUUID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasEquiped()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              equiped_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              spriteUUID_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 index = 1;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // required bool equiped = 2;
      private boolean equiped_ ;
      public boolean hasEquiped() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getEquiped() {
        return equiped_;
      }
      public Builder setEquiped(boolean value) {
        bitField0_ |= 0x00000002;
        equiped_ = value;
        onChanged();
        return this;
      }
      public Builder clearEquiped() {
        bitField0_ = (bitField0_ & ~0x00000002);
        equiped_ = false;
        onChanged();
        return this;
      }
      
      // optional string spriteUUID = 3;
      private java.lang.Object spriteUUID_ = "";
      public boolean hasSpriteUUID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSpriteUUID() {
        java.lang.Object ref = spriteUUID_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          spriteUUID_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSpriteUUID(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        spriteUUID_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpriteUUID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        spriteUUID_ = getDefaultInstance().getSpriteUUID();
        onChanged();
        return this;
      }
      void setSpriteUUID(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        spriteUUID_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:com.hifun.soul.proto.common.SpriteSlot)
    }
    
    static {
      defaultInstance = new SpriteSlot(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hifun.soul.proto.common.SpriteSlot)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hifun_soul_proto_common_SpriteData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hifun_soul_proto_common_SpriteData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hifun_soul_proto_common_SpriteBuff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hifun_soul_proto_common_SpriteBuff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hifun_soul_proto_common_SpriteBagCell_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hifun_soul_proto_common_SpriteBagCell_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hifun_soul_proto_common_SpriteSlot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hifun_soul_proto_common_SpriteSlot_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Sprite.proto\022\033com.hifun.soul.proto.com" +
      "mon\"R\n\nSpriteData\022\020\n\010spriteId\030\001 \002(\005\022\022\n\ns" +
      "priteUUID\030\002 \002(\t\022\r\n\005level\030\003 \002(\005\022\017\n\007equipe" +
      "d\030\004 \002(\010\"/\n\nSpriteBuff\022\016\n\006buffId\030\001 \002(\005\022\021\n" +
      "\tactivated\030\002 \002(\010\"C\n\rSpriteBagCell\022\r\n\005ind" +
      "ex\030\001 \002(\005\022\017\n\007equiped\030\002 \002(\010\022\022\n\nspriteUUID\030" +
      "\003 \001(\t\"@\n\nSpriteSlot\022\r\n\005index\030\001 \002(\005\022\017\n\007eq" +
      "uiped\030\002 \002(\010\022\022\n\nspriteUUID\030\003 \001(\tB&\n\033com.h" +
      "ifun.soul.proto.commonB\007Sprites"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_hifun_soul_proto_common_SpriteData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_hifun_soul_proto_common_SpriteData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hifun_soul_proto_common_SpriteData_descriptor,
              new java.lang.String[] { "SpriteId", "SpriteUUID", "Level", "Equiped", },
              com.hifun.soul.proto.common.Sprites.SpriteData.class,
              com.hifun.soul.proto.common.Sprites.SpriteData.Builder.class);
          internal_static_com_hifun_soul_proto_common_SpriteBuff_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_hifun_soul_proto_common_SpriteBuff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hifun_soul_proto_common_SpriteBuff_descriptor,
              new java.lang.String[] { "BuffId", "Activated", },
              com.hifun.soul.proto.common.Sprites.SpriteBuff.class,
              com.hifun.soul.proto.common.Sprites.SpriteBuff.Builder.class);
          internal_static_com_hifun_soul_proto_common_SpriteBagCell_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_hifun_soul_proto_common_SpriteBagCell_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hifun_soul_proto_common_SpriteBagCell_descriptor,
              new java.lang.String[] { "Index", "Equiped", "SpriteUUID", },
              com.hifun.soul.proto.common.Sprites.SpriteBagCell.class,
              com.hifun.soul.proto.common.Sprites.SpriteBagCell.Builder.class);
          internal_static_com_hifun_soul_proto_common_SpriteSlot_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_hifun_soul_proto_common_SpriteSlot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hifun_soul_proto_common_SpriteSlot_descriptor,
              new java.lang.String[] { "Index", "Equiped", "SpriteUUID", },
              com.hifun.soul.proto.common.Sprites.SpriteSlot.class,
              com.hifun.soul.proto.common.Sprites.SpriteSlot.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
