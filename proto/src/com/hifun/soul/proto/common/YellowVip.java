// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: YellowVip.proto

package com.hifun.soul.proto.common;

public final class YellowVip {
  private YellowVip() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HumanYellowVipRewardStateInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int64 humanGuid = 1;
    boolean hasHumanGuid();
    long getHumanGuid();
    
    // optional int32 onceRewardState = 2;
    boolean hasOnceRewardState();
    int getOnceRewardState();
    
    // optional int32 dailyRewardState = 3;
    boolean hasDailyRewardState();
    int getDailyRewardState();
    
    // optional int32 yearVipDailyRewardState = 4;
    boolean hasYearVipDailyRewardState();
    int getYearVipDailyRewardState();
    
    // repeated int32 levelUpRewardState = 5;
    java.util.List<java.lang.Integer> getLevelUpRewardStateList();
    int getLevelUpRewardStateCount();
    int getLevelUpRewardState(int index);
  }
  public static final class HumanYellowVipRewardStateInfo extends
      com.google.protobuf.GeneratedMessage
      implements HumanYellowVipRewardStateInfoOrBuilder {
    // Use HumanYellowVipRewardStateInfo.newBuilder() to construct.
    private HumanYellowVipRewardStateInfo(Builder builder) {
      super(builder);
    }
    private HumanYellowVipRewardStateInfo(boolean noInit) {}
    
    private static final HumanYellowVipRewardStateInfo defaultInstance;
    public static HumanYellowVipRewardStateInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public HumanYellowVipRewardStateInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hifun.soul.proto.common.YellowVip.internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hifun.soul.proto.common.YellowVip.internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int64 humanGuid = 1;
    public static final int HUMANGUID_FIELD_NUMBER = 1;
    private long humanGuid_;
    public boolean hasHumanGuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getHumanGuid() {
      return humanGuid_;
    }
    
    // optional int32 onceRewardState = 2;
    public static final int ONCEREWARDSTATE_FIELD_NUMBER = 2;
    private int onceRewardState_;
    public boolean hasOnceRewardState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getOnceRewardState() {
      return onceRewardState_;
    }
    
    // optional int32 dailyRewardState = 3;
    public static final int DAILYREWARDSTATE_FIELD_NUMBER = 3;
    private int dailyRewardState_;
    public boolean hasDailyRewardState() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getDailyRewardState() {
      return dailyRewardState_;
    }
    
    // optional int32 yearVipDailyRewardState = 4;
    public static final int YEARVIPDAILYREWARDSTATE_FIELD_NUMBER = 4;
    private int yearVipDailyRewardState_;
    public boolean hasYearVipDailyRewardState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getYearVipDailyRewardState() {
      return yearVipDailyRewardState_;
    }
    
    // repeated int32 levelUpRewardState = 5;
    public static final int LEVELUPREWARDSTATE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> levelUpRewardState_;
    public java.util.List<java.lang.Integer>
        getLevelUpRewardStateList() {
      return levelUpRewardState_;
    }
    public int getLevelUpRewardStateCount() {
      return levelUpRewardState_.size();
    }
    public int getLevelUpRewardState(int index) {
      return levelUpRewardState_.get(index);
    }
    
    private void initFields() {
      humanGuid_ = 0L;
      onceRewardState_ = 0;
      dailyRewardState_ = 0;
      yearVipDailyRewardState_ = 0;
      levelUpRewardState_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasHumanGuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, humanGuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, onceRewardState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dailyRewardState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, yearVipDailyRewardState_);
      }
      for (int i = 0; i < levelUpRewardState_.size(); i++) {
        output.writeInt32(5, levelUpRewardState_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, humanGuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, onceRewardState_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dailyRewardState_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, yearVipDailyRewardState_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < levelUpRewardState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(levelUpRewardState_.get(i));
        }
        size += dataSize;
        size += 1 * getLevelUpRewardStateList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hifun.soul.proto.common.YellowVip.internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hifun.soul.proto.common.YellowVip.internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_fieldAccessorTable;
      }
      
      // Construct using com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        humanGuid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        onceRewardState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dailyRewardState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        yearVipDailyRewardState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        levelUpRewardState_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.getDescriptor();
      }
      
      public com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo getDefaultInstanceForType() {
        return com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.getDefaultInstance();
      }
      
      public com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo build() {
        com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo buildPartial() {
        com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo result = new com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.humanGuid_ = humanGuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.onceRewardState_ = onceRewardState_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dailyRewardState_ = dailyRewardState_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.yearVipDailyRewardState_ = yearVipDailyRewardState_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          levelUpRewardState_ = java.util.Collections.unmodifiableList(levelUpRewardState_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.levelUpRewardState_ = levelUpRewardState_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo) {
          return mergeFrom((com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo other) {
        if (other == com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.getDefaultInstance()) return this;
        if (other.hasHumanGuid()) {
          setHumanGuid(other.getHumanGuid());
        }
        if (other.hasOnceRewardState()) {
          setOnceRewardState(other.getOnceRewardState());
        }
        if (other.hasDailyRewardState()) {
          setDailyRewardState(other.getDailyRewardState());
        }
        if (other.hasYearVipDailyRewardState()) {
          setYearVipDailyRewardState(other.getYearVipDailyRewardState());
        }
        if (!other.levelUpRewardState_.isEmpty()) {
          if (levelUpRewardState_.isEmpty()) {
            levelUpRewardState_ = other.levelUpRewardState_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLevelUpRewardStateIsMutable();
            levelUpRewardState_.addAll(other.levelUpRewardState_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasHumanGuid()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              humanGuid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              onceRewardState_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dailyRewardState_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              yearVipDailyRewardState_ = input.readInt32();
              break;
            }
            case 40: {
              ensureLevelUpRewardStateIsMutable();
              levelUpRewardState_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addLevelUpRewardState(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 humanGuid = 1;
      private long humanGuid_ ;
      public boolean hasHumanGuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getHumanGuid() {
        return humanGuid_;
      }
      public Builder setHumanGuid(long value) {
        bitField0_ |= 0x00000001;
        humanGuid_ = value;
        onChanged();
        return this;
      }
      public Builder clearHumanGuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        humanGuid_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 onceRewardState = 2;
      private int onceRewardState_ ;
      public boolean hasOnceRewardState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getOnceRewardState() {
        return onceRewardState_;
      }
      public Builder setOnceRewardState(int value) {
        bitField0_ |= 0x00000002;
        onceRewardState_ = value;
        onChanged();
        return this;
      }
      public Builder clearOnceRewardState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        onceRewardState_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dailyRewardState = 3;
      private int dailyRewardState_ ;
      public boolean hasDailyRewardState() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getDailyRewardState() {
        return dailyRewardState_;
      }
      public Builder setDailyRewardState(int value) {
        bitField0_ |= 0x00000004;
        dailyRewardState_ = value;
        onChanged();
        return this;
      }
      public Builder clearDailyRewardState() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dailyRewardState_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 yearVipDailyRewardState = 4;
      private int yearVipDailyRewardState_ ;
      public boolean hasYearVipDailyRewardState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getYearVipDailyRewardState() {
        return yearVipDailyRewardState_;
      }
      public Builder setYearVipDailyRewardState(int value) {
        bitField0_ |= 0x00000008;
        yearVipDailyRewardState_ = value;
        onChanged();
        return this;
      }
      public Builder clearYearVipDailyRewardState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yearVipDailyRewardState_ = 0;
        onChanged();
        return this;
      }
      
      // repeated int32 levelUpRewardState = 5;
      private java.util.List<java.lang.Integer> levelUpRewardState_ = java.util.Collections.emptyList();;
      private void ensureLevelUpRewardStateIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          levelUpRewardState_ = new java.util.ArrayList<java.lang.Integer>(levelUpRewardState_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<java.lang.Integer>
          getLevelUpRewardStateList() {
        return java.util.Collections.unmodifiableList(levelUpRewardState_);
      }
      public int getLevelUpRewardStateCount() {
        return levelUpRewardState_.size();
      }
      public int getLevelUpRewardState(int index) {
        return levelUpRewardState_.get(index);
      }
      public Builder setLevelUpRewardState(
          int index, int value) {
        ensureLevelUpRewardStateIsMutable();
        levelUpRewardState_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addLevelUpRewardState(int value) {
        ensureLevelUpRewardStateIsMutable();
        levelUpRewardState_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllLevelUpRewardState(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLevelUpRewardStateIsMutable();
        super.addAll(values, levelUpRewardState_);
        onChanged();
        return this;
      }
      public Builder clearLevelUpRewardState() {
        levelUpRewardState_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.hifun.soul.proto.common.HumanYellowVipRewardStateInfo)
    }
    
    static {
      defaultInstance = new HumanYellowVipRewardStateInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.hifun.soul.proto.common.HumanYellowVipRewardStateInfo)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017YellowVip.proto\022\033com.hifun.soul.proto." +
      "common\"\242\001\n\035HumanYellowVipRewardStateInfo" +
      "\022\021\n\thumanGuid\030\001 \002(\003\022\027\n\017onceRewardState\030\002" +
      " \001(\005\022\030\n\020dailyRewardState\030\003 \001(\005\022\037\n\027yearVi" +
      "pDailyRewardState\030\004 \001(\005\022\032\n\022levelUpReward" +
      "State\030\005 \003(\005B(\n\033com.hifun.soul.proto.comm" +
      "onB\tYellowVip"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_hifun_soul_proto_common_HumanYellowVipRewardStateInfo_descriptor,
              new java.lang.String[] { "HumanGuid", "OnceRewardState", "DailyRewardState", "YearVipDailyRewardState", "LevelUpRewardState", },
              com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.class,
              com.hifun.soul.proto.common.YellowVip.HumanYellowVipRewardStateInfo.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
